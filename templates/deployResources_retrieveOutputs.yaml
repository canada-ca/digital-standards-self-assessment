parameters:
  beStorageKey: ""
  beContainer: ""
  beStorageAccount: ""
  azureSubscription: ""
  existingAPIM: ""

steps:
  - checkout: self
    clean: false
  - task: Npm@1
    displayName: "Pulumi dependecies install"
    inputs:
      command: "custom"
      workingDir: "infrastructure"
      customCommand: "install --no-audit"

  - task: DownloadPipelineArtifact@2
    displayName: "Download Pulumi settings"
    inputs:
      buildType: "current"
      artifactName: "pulumifile"
      targetPath: "$(Build.SourcesDirectory)/infrastructure"

  - task: AzureCLI@2
    displayName: "Create State Stack"
    env:
      ENV_NAME: $(ENV)
      PROJECT_NAME: $(project)
      PULUMI_CONFIG_PASSPHRASE: $(pass)
      AZURE_STORAGE_KEY: ${{ parameters.beStorageKey }}
      AZURE_STORAGE_ACCOUNT: ${{ parameters.beStorageAccount }}

    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: "ps"
      scriptLocation: "scriptPath"
      scriptPath: "$(Build.SourcesDirectory)/infrastructure/helperScripts/createStack.ps1"
      workingDirectory: "$(Build.SourcesDirectory)/infrastructure"
      addSpnToEnvironment: true

  - task: Pulumi@1
    displayName: "Pulumi Up"
    env:
      ENV_NAME: $(ENV)
      PROJECT_NAME: $(project)
      PULUMI_CONFIG_PASSPHRASE: $(pass)
      AZURE_STORAGE_KEY: ${{ parameters.beStorageKey }}
      AZURE_STORAGE_ACCOUNT: ${{ parameters.beStorageAccount }}
      CURRENT_APIM: ${{ parameters.existingAPIM }}
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      command: "up"
      args: "-y -f --suppress-outputs"
      loginArgs: "azblob://${{ parameters.beContainer }}"
      cwd: "infrastructure"
      stack: "$(ENV)"

  - task: AzureCLI@2
    displayName: "Retrieve new resource names"
    env:
      ENV_NAME: $(ENV)
      ROJECT_NAME: $(project)
      PULUMI_CONFIG_PASSPHRASE: $(pass)
      AZURE_STORAGE_KEY: ${{ parameters.beStorageKey }}
      AZURE_STORAGE_ACCOUNT: ${{ parameters.beStorageAccount }}
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: "ps"
      scriptLocation: "scriptPath"
      scriptPath: "$(Build.SourcesDirectory)/infrastructure/helperScripts/retrievePulumiOutputs.ps1"
      workingDirectory: "$(Build.SourcesDirectory)/infrastructure"
    name: pulumiOutputs
